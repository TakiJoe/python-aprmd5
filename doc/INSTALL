Purpose of this document
------------------------
This document provides information on how to install python-aprmd5 on a target
system. If you are an end user, read the section titled "End user installation".
If you are a packager, skip the end user section and read on below.


End user installation
---------------------
1. Download the source tar ball from the python-aprmd5 website
2. Extract the tar ball contents

     tar xfvz python-aprmd5-x.y.tar.gz

3. Perform a build

    cd python-aprmd5-x.y
    ./setup.py build

4. Install. If you have system administration rights, just do this: 

     ./setup.py install

   You might also consider installing to some prefix directory such as
   /usr/local. In this case the command would be

     ./setup.py install --prefix=/usr/local

   Finally, if you want to install python-aprmd5 into your home directory, e.g.
   because you are not the system administrator, the command looks like this

    ./setup.py install --home=~

5. Wherever you installed python-aprmd5, in order to use the module the folder
   that contains the "aprmd5" package must be in your PYTHONPATH.

   If you need to adjust PYTHONPATH, a good starting place might be your
   ~/.bashrc file (if you are using bash).


Packager information
--------------------
The tar ball that can be downloaded from the project website has been created
using the Distutils Python module. In the terminology of Distutils, the tar
ball is a so-called "source distribution" intended to be converted by a packager
into a so-called "built distribution" (e.g. an RPM or Debian package).

If you are a packager, bla bla bla (fix setup.py so that it matches the platform
it is run on)

./setup.py build_ext
-> builds extension into src/packages/aprmd5.so
-> because of setup.cfg
-> is equivalent to the command
     ./setup.py build_ext --build-lib src/packages
-> for gcc, include and/or library directories can also be added by setting
   the environment variables CPATH and/or LIBRARY_PATH. For instance:
     CPATH=/sw/include LIBRARY_PATH=/sw/lib ./setup.py build_ext

./setup.py test

Manual tests:
  PYTHONPATH=src/packages python

