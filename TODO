Purpose of this document
------------------------
This document contains a list of minor features and technical stuff that should
be implemented when time permits it. The TODO list is updated frequently as new
ideas crop up during programming.

For a broader view of how the project will develop over time, you should see
the Roadmap document.


Release blockers
----------------
- Determine license to use (GPL v3 or LGPL)
- Check out project structure of python-mhash
- Finish writing INSTALL (section "packager information")
- Finish writing README; among other things, document how to switch between
  major versions of libaprutil in the "libaprutil version" section
- Finish writing ReleaseSteps
- Make it work for all versions of libaprutil
- Find a way how to use the system version of apr-util on my Mac; the custom
  installed version of Python 3 (/Library/Frameworks/Python.framework/Versions/3.0)
  adds the argument "-isysroot /Developer/SDKs/MacOSX10.4u.sdk" to the gcc
  command line, which makes the regular system apr-util (header files in
  /usr/include/apr-1, library file in /usr/lib) invisible to the build
  process


Priority 1 (important)
----------------------
None


Priority 2 (nice to have)
-------------------------
- Instead of directly exposing apr_md5_init(), apr_md5_update() and
  apr_md5_final(), python-aprmd5 should behave similar to the Python Standard
  Library's hashlib module:
    1) Generate an md5 object (corresponds to calling apr_md5_init())
    2) Calling update() on the object (corresponds to calling apr_md5_update())
    3) Calling digest() on the object (corresponds to calling apr_md5_final())
    4) As a convenience, provide a hexdigest() method


Priority 3 (not important)
-------------------------
- Register with PyPI
