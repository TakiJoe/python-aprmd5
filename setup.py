#!/usr/bin/env python
# encoding=utf-8

# Copyright 2009 Patrick Näf
# 
# This file is part of python-aprmd5
#
# python-aprmd5 is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# python-aprmd5 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with python-aprmd5. If not, see <http://www.gnu.org/licenses/>.


# PSL
from distutils.core import setup, Extension
from distutils.cmd import Command
import unittest
import sys


# Assume that includes and libraries can be found in the system directories.
# For gcc, include and/or library directories can be added by setting the
# environment variables CPATH and/or LIBRARY_PATH. For instance, on my Mac OS X
# system with apr-util installed through fink, I would invoke setup.py like
# this:
#   CPATH=/sw/include LIBRARY_PATH=/sw/lib ./setup.py build
#
# To build the extension module right inside the git working tree, use this
# command line:
#   ./setup.py build_ext --inplace
aprmd5 = Extension('aprmd5',
                    libraries = ['aprutil-0'],
                    sources = ['aprmd5.c'])


setup(
      # Meta-data
      name="python-aprmd5",
      version="0.1",
      url="http://www.herzbube.ch/python-aprmd5",
      author="Patrick Näf",
      author_email="herzbube@herzbube.ch",
      description="Python interface to the MD5 routines of the apr-util library",
      long_description=
"""
Python interface to the MD5 routines of the apr-util library.

The libaprutil MD5 routines are used to generate salted crypt-style hashes using
a version of MD5 modified for Apache. The resulting hashes always start with
the prefix characters "$apr1$" in order to distinguish them from the result of
various other crypt() variants, which use other prefixes. For instance, for
input "foo" and salt "mYJd83wW", the result is this:

  $apr1$mYJd83wW$IO.6aK3G0d4mHxcImhPX50

Hashes like this are typically generated by the command line utility htpasswd,
which is part of the Apache HTTP server project. The hashes encrypt user
passwords, which are used by the Apache HTTP server for basic user
authentication.
""",
      # List extension modules
      ext_modules= [aprmd5]
     )
